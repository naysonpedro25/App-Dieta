// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int            @id @default(autoincrement())
  createdAt      DateTime       @default(now())
  name           String         @db.VarChar(255)
  sex            Sex
  age            Int
  objective      Objective
  height         Float
  weight         Float
  password       String         @db.VarChar(255)
  email          String         @unique @db.VarChar(255)
  updatedAt      DateTime       @updatedAt
  calories_goals Float
  meals          Meal[]
  dailyCalories  DailyCalories?
}

model Meal {
  id       Int        @id @default(autoincrement())
  user     User       @relation(fields: [userId], references: [id])
  userId   Int
  name     String
  calories Float
  date     DateTime   @default(now())
  foods    MealFood[]
}

model Food {
  id            Int        @id @default(autoincrement())
  meals         MealFood[]
  name          String     @db.VarChar(255)
  calories      Float
  carbohydrates Float
  proteins      Float
  fats          Float
  createdAt     DateTime   @default(now())
}

model MealFood {
  foodId Int
  mealId Int

  meal Meal @relation(fields: [mealId], references: [id])
  Food Food @relation(fields: [foodId], references: [id])

  @@id([mealId, foodId]) // chave composta
}

model DailyCalories {
  id                Int      @id @default(autoincrement())
  calories_consumed Float
  calories_burned   Float
  date              DateTime
  user              User     @relation(fields: [userId], references: [id])
  userId            Int      @unique
}

enum Sex {
  MALE
  FEMALE
}

enum Objective {
  WEIGHT_LOSS
  WEIGHT_GAIN
  MAINTAIN
}
